Grammar

    0 $accept: statements $end

    1 statements: statement statements
    2           | declarations statements
    3           | ε

    4 declarations: function_dec
    5             | class
    6             | imports

    7 variable: IDENTIFIER
    8         | NUMBER

    9 function_dec: DEF IDENTIFIER OPENBRACE arguments CLBRACE blockstart indent statements return_stmt dedent

   10 arguments: ε
   11          | set_of_args

   12 set_of_args: IDENTIFIER COMA set_of_args
   13            | IDENTIFIER

   14 return_stmt: ε
   15            | RETURN function_call_explicit NEWLINE
   16            | RETURN IDENTIFIER NEWLINE

   17 class: CLASS IDENTIFIER blockstart indent set_of_functions dedent

   18 set_of_functions: function_dec set_of_functions
   19                 | ε

   20 statement: assignment
   21          | list_dec
   22          | iterations
   23          | if_stmt_s
   24          | function_call_explicit

   25 imports: IMPORT IDENTIFIER AS IDENTIFIER NEWLINE
   26        | FROM IDENTIFIER IMPORT IDENTIFIER AS IDENTIFIER NEWLINE

   27 assignment: IDENTIFIER ASSIGNOPR variable NEWLINE
   28           | IDENTIFIER ASSIGNOPR function_call NEWLINE

   29 function_call_explicit: IDENTIFIER OPENBRACE arguments CLBRACE NEWLINE

   30 function_call: IDENTIFIER OPENBRACE arguments CLBRACE

   31 iterations: WHILE OPENBRACE test CLBRACE blockstart indent block_stmts dedent
   32           | FOR OPENBRACE IDENTIFIER IN IDENTIFIER CLBRACE blockstart indent block_stmts dedent
   33           | WHILE test blockstart indent block_stmts dedent
   34           | FOR IDENTIFIER IN IDENTIFIER blockstart indent block_stmts dedent
   35           | FOR IDENTIFIER IN function_call blockstart indent block_stmts dedent

   36 test: variable REL_OP variable

   37 blockstart: BLOCKSTART NEWLINE

   38 indent: INDENT

   39 dedent: DEDENT

   40 block_stmts: statement block_stmts
   41            | statement

   42 if_stmt_s: if_stmt elif_stmt else_stmt

   43 if_stmt: IF OPENBRACE test CLBRACE blockstart indent block_stmts dedent
   44        | IF test blockstart indent block_stmts dedent

   45 elif_stmt: ε
   46          | ELIF OPENBRACE test CLBRACE blockstart indent block_stmts dedent
   47          | ELIF test blockstart indent block_stmts dedent

   48 else_stmt: ε
   49          | ELSE blockstart indent block_stmts dedent

   50 list_dec: IDENTIFIER ASSIGNOPR OPENLIST set_of_args CLLIST NEWLINE
   51         | IDENTIFIER ASSIGNOPR OPENLIST variable ARTH_OP variable FOR IDENTIFIER IN function_call CLLIST NEWLINE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    OPENBRACE (258) 9 29 30 31 32 43 46
    CLBRACE (259) 9 29 30 31 32 43 46
    BLOCKSTART (260) 37
    OPENLIST (261) 50 51
    CLLIST (262) 50 51
    NEWLINE (263) 15 16 25 26 27 28 29 37 50 51
    INDENT (264) 38
    DEDENT (265) 39
    ASSIGNOPR (266) 27 28 50 51
    REL_OP (267) 36
    COMA (268) 12
    ARTH_OP (269) 51
    IDENTIFIER (270) 7 9 12 13 16 17 25 26 27 28 29 30 32 34 35 50 51
    NUMBER (271) 8
    WHILE (272) 31 33
    FOR (273) 32 34 35 51
    IF (274) 43 44
    ELSE (275) 49
    ELIF (276) 46 47
    IMPORT (277) 25 26
    AS (278) 25 26
    FROM (279) 26
    CLASS (280) 17
    DEF (281) 9
    IN (282) 32 34 35 51
    RETURN (283) 15 16


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    statements (30)
        on left: 1 2 3
        on right: 0 1 2 9
    declarations (31)
        on left: 4 5 6
        on right: 2
    variable (32)
        on left: 7 8
        on right: 27 36 51
    function_dec (33)
        on left: 9
        on right: 4 18
    arguments (34)
        on left: 10 11
        on right: 9 29 30
    set_of_args (35)
        on left: 12 13
        on right: 11 12 50
    return_stmt (36)
        on left: 14 15 16
        on right: 9
    class (37)
        on left: 17
        on right: 5
    set_of_functions (38)
        on left: 18 19
        on right: 17 18
    statement (39)
        on left: 20 21 22 23 24
        on right: 1 40 41
    imports (40)
        on left: 25 26
        on right: 6
    assignment (41)
        on left: 27 28
        on right: 20
    function_call_explicit (42)
        on left: 29
        on right: 15 24
    function_call (43)
        on left: 30
        on right: 28 35 51
    iterations (44)
        on left: 31 32 33 34 35
        on right: 22
    test (45)
        on left: 36
        on right: 31 33 43 44 46 47
    blockstart (46)
        on left: 37
        on right: 9 17 31 32 33 34 35 43 44 46 47 49
    indent (47)
        on left: 38
        on right: 9 17 31 32 33 34 35 43 44 46 47 49
    dedent (48)
        on left: 39
        on right: 9 17 31 32 33 34 35 43 44 46 47 49
    block_stmts (49)
        on left: 40 41
        on right: 31 32 33 34 35 40 43 44 46 47 49
    if_stmt_s (50)
        on left: 42
        on right: 23
    if_stmt (51)
        on left: 43 44
        on right: 42
    elif_stmt (52)
        on left: 45 46 47
        on right: 42
    else_stmt (53)
        on left: 48 49
        on right: 42
    list_dec (54)
        on left: 50 51
        on right: 21


State 0

    0 $accept: • statements $end

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    IMPORT      shift, and go to state 5
    FROM        shift, and go to state 6
    CLASS       shift, and go to state 7
    DEF         shift, and go to state 8

    $default  reduce using rule 3 (statements)

    statements              go to state 9
    declarations            go to state 10
    function_dec            go to state 11
    class                   go to state 12
    statement               go to state 13
    imports                 go to state 14
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 1

   27 assignment: IDENTIFIER • ASSIGNOPR variable NEWLINE
   28           | IDENTIFIER • ASSIGNOPR function_call NEWLINE
   29 function_call_explicit: IDENTIFIER • OPENBRACE arguments CLBRACE NEWLINE
   50 list_dec: IDENTIFIER • ASSIGNOPR OPENLIST set_of_args CLLIST NEWLINE
   51         | IDENTIFIER • ASSIGNOPR OPENLIST variable ARTH_OP variable FOR IDENTIFIER IN function_call CLLIST NEWLINE

    OPENBRACE  shift, and go to state 21
    ASSIGNOPR  shift, and go to state 22


State 2

   31 iterations: WHILE • OPENBRACE test CLBRACE blockstart indent block_stmts dedent
   33           | WHILE • test blockstart indent block_stmts dedent

    OPENBRACE   shift, and go to state 23
    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25

    variable  go to state 26
    test      go to state 27


State 3

   32 iterations: FOR • OPENBRACE IDENTIFIER IN IDENTIFIER CLBRACE blockstart indent block_stmts dedent
   34           | FOR • IDENTIFIER IN IDENTIFIER blockstart indent block_stmts dedent
   35           | FOR • IDENTIFIER IN function_call blockstart indent block_stmts dedent

    OPENBRACE   shift, and go to state 28
    IDENTIFIER  shift, and go to state 29


State 4

   43 if_stmt: IF • OPENBRACE test CLBRACE blockstart indent block_stmts dedent
   44        | IF • test blockstart indent block_stmts dedent

    OPENBRACE   shift, and go to state 30
    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25

    variable  go to state 26
    test      go to state 31


State 5

   25 imports: IMPORT • IDENTIFIER AS IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 32


State 6

   26 imports: FROM • IDENTIFIER IMPORT IDENTIFIER AS IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 33


State 7

   17 class: CLASS • IDENTIFIER blockstart indent set_of_functions dedent

    IDENTIFIER  shift, and go to state 34


State 8

    9 function_dec: DEF • IDENTIFIER OPENBRACE arguments CLBRACE blockstart indent statements return_stmt dedent

    IDENTIFIER  shift, and go to state 35


State 9

    0 $accept: statements • $end

    $end  shift, and go to state 36


State 10

    2 statements: declarations • statements

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    IMPORT      shift, and go to state 5
    FROM        shift, and go to state 6
    CLASS       shift, and go to state 7
    DEF         shift, and go to state 8

    $default  reduce using rule 3 (statements)

    statements              go to state 37
    declarations            go to state 10
    function_dec            go to state 11
    class                   go to state 12
    statement               go to state 13
    imports                 go to state 14
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 11

    4 declarations: function_dec •

    $default  reduce using rule 4 (declarations)


State 12

    5 declarations: class •

    $default  reduce using rule 5 (declarations)


State 13

    1 statements: statement • statements

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    IMPORT      shift, and go to state 5
    FROM        shift, and go to state 6
    CLASS       shift, and go to state 7
    DEF         shift, and go to state 8

    $default  reduce using rule 3 (statements)

    statements              go to state 38
    declarations            go to state 10
    function_dec            go to state 11
    class                   go to state 12
    statement               go to state 13
    imports                 go to state 14
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 14

    6 declarations: imports •

    $default  reduce using rule 6 (declarations)


State 15

   20 statement: assignment •

    $default  reduce using rule 20 (statement)


State 16

   24 statement: function_call_explicit •

    $default  reduce using rule 24 (statement)


State 17

   22 statement: iterations •

    $default  reduce using rule 22 (statement)


State 18

   23 statement: if_stmt_s •

    $default  reduce using rule 23 (statement)


State 19

   42 if_stmt_s: if_stmt • elif_stmt else_stmt

    ELIF  shift, and go to state 39

    $default  reduce using rule 45 (elif_stmt)

    elif_stmt  go to state 40


State 20

   21 statement: list_dec •

    $default  reduce using rule 21 (statement)


State 21

   29 function_call_explicit: IDENTIFIER OPENBRACE • arguments CLBRACE NEWLINE

    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 10 (arguments)

    arguments    go to state 42
    set_of_args  go to state 43


State 22

   27 assignment: IDENTIFIER ASSIGNOPR • variable NEWLINE
   28           | IDENTIFIER ASSIGNOPR • function_call NEWLINE
   50 list_dec: IDENTIFIER ASSIGNOPR • OPENLIST set_of_args CLLIST NEWLINE
   51         | IDENTIFIER ASSIGNOPR • OPENLIST variable ARTH_OP variable FOR IDENTIFIER IN function_call CLLIST NEWLINE

    OPENLIST    shift, and go to state 44
    IDENTIFIER  shift, and go to state 45
    NUMBER      shift, and go to state 25

    variable       go to state 46
    function_call  go to state 47


State 23

   31 iterations: WHILE OPENBRACE • test CLBRACE blockstart indent block_stmts dedent

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25

    variable  go to state 26
    test      go to state 48


State 24

    7 variable: IDENTIFIER •

    $default  reduce using rule 7 (variable)


State 25

    8 variable: NUMBER •

    $default  reduce using rule 8 (variable)


State 26

   36 test: variable • REL_OP variable

    REL_OP  shift, and go to state 49


State 27

   33 iterations: WHILE test • blockstart indent block_stmts dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 51


State 28

   32 iterations: FOR OPENBRACE • IDENTIFIER IN IDENTIFIER CLBRACE blockstart indent block_stmts dedent

    IDENTIFIER  shift, and go to state 52


State 29

   34 iterations: FOR IDENTIFIER • IN IDENTIFIER blockstart indent block_stmts dedent
   35           | FOR IDENTIFIER • IN function_call blockstart indent block_stmts dedent

    IN  shift, and go to state 53


State 30

   43 if_stmt: IF OPENBRACE • test CLBRACE blockstart indent block_stmts dedent

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25

    variable  go to state 26
    test      go to state 54


State 31

   44 if_stmt: IF test • blockstart indent block_stmts dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 55


State 32

   25 imports: IMPORT IDENTIFIER • AS IDENTIFIER NEWLINE

    AS  shift, and go to state 56


State 33

   26 imports: FROM IDENTIFIER • IMPORT IDENTIFIER AS IDENTIFIER NEWLINE

    IMPORT  shift, and go to state 57


State 34

   17 class: CLASS IDENTIFIER • blockstart indent set_of_functions dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 58


State 35

    9 function_dec: DEF IDENTIFIER • OPENBRACE arguments CLBRACE blockstart indent statements return_stmt dedent

    OPENBRACE  shift, and go to state 59


State 36

    0 $accept: statements $end •

    $default  accept


State 37

    2 statements: declarations statements •

    $default  reduce using rule 2 (statements)


State 38

    1 statements: statement statements •

    $default  reduce using rule 1 (statements)


State 39

   46 elif_stmt: ELIF • OPENBRACE test CLBRACE blockstart indent block_stmts dedent
   47          | ELIF • test blockstart indent block_stmts dedent

    OPENBRACE   shift, and go to state 60
    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25

    variable  go to state 26
    test      go to state 61


State 40

   42 if_stmt_s: if_stmt elif_stmt • else_stmt

    ELSE  shift, and go to state 62

    $default  reduce using rule 48 (else_stmt)

    else_stmt  go to state 63


State 41

   12 set_of_args: IDENTIFIER • COMA set_of_args
   13            | IDENTIFIER •

    COMA  shift, and go to state 64

    $default  reduce using rule 13 (set_of_args)


State 42

   29 function_call_explicit: IDENTIFIER OPENBRACE arguments • CLBRACE NEWLINE

    CLBRACE  shift, and go to state 65


State 43

   11 arguments: set_of_args •

    $default  reduce using rule 11 (arguments)


State 44

   50 list_dec: IDENTIFIER ASSIGNOPR OPENLIST • set_of_args CLLIST NEWLINE
   51         | IDENTIFIER ASSIGNOPR OPENLIST • variable ARTH_OP variable FOR IDENTIFIER IN function_call CLLIST NEWLINE

    IDENTIFIER  shift, and go to state 66
    NUMBER      shift, and go to state 25

    variable     go to state 67
    set_of_args  go to state 68


State 45

    7 variable: IDENTIFIER •
   30 function_call: IDENTIFIER • OPENBRACE arguments CLBRACE

    OPENBRACE  shift, and go to state 69

    $default  reduce using rule 7 (variable)


State 46

   27 assignment: IDENTIFIER ASSIGNOPR variable • NEWLINE

    NEWLINE  shift, and go to state 70


State 47

   28 assignment: IDENTIFIER ASSIGNOPR function_call • NEWLINE

    NEWLINE  shift, and go to state 71


State 48

   31 iterations: WHILE OPENBRACE test • CLBRACE blockstart indent block_stmts dedent

    CLBRACE  shift, and go to state 72


State 49

   36 test: variable REL_OP • variable

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25

    variable  go to state 73


State 50

   37 blockstart: BLOCKSTART • NEWLINE

    NEWLINE  shift, and go to state 74


State 51

   33 iterations: WHILE test blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 76


State 52

   32 iterations: FOR OPENBRACE IDENTIFIER • IN IDENTIFIER CLBRACE blockstart indent block_stmts dedent

    IN  shift, and go to state 77


State 53

   34 iterations: FOR IDENTIFIER IN • IDENTIFIER blockstart indent block_stmts dedent
   35           | FOR IDENTIFIER IN • function_call blockstart indent block_stmts dedent

    IDENTIFIER  shift, and go to state 78

    function_call  go to state 79


State 54

   43 if_stmt: IF OPENBRACE test • CLBRACE blockstart indent block_stmts dedent

    CLBRACE  shift, and go to state 80


State 55

   44 if_stmt: IF test blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 81


State 56

   25 imports: IMPORT IDENTIFIER AS • IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 82


State 57

   26 imports: FROM IDENTIFIER IMPORT • IDENTIFIER AS IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 83


State 58

   17 class: CLASS IDENTIFIER blockstart • indent set_of_functions dedent

    INDENT  shift, and go to state 75

    indent  go to state 84


State 59

    9 function_dec: DEF IDENTIFIER OPENBRACE • arguments CLBRACE blockstart indent statements return_stmt dedent

    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 10 (arguments)

    arguments    go to state 85
    set_of_args  go to state 43


State 60

   46 elif_stmt: ELIF OPENBRACE • test CLBRACE blockstart indent block_stmts dedent

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25

    variable  go to state 26
    test      go to state 86


State 61

   47 elif_stmt: ELIF test • blockstart indent block_stmts dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 87


State 62

   49 else_stmt: ELSE • blockstart indent block_stmts dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 88


State 63

   42 if_stmt_s: if_stmt elif_stmt else_stmt •

    $default  reduce using rule 42 (if_stmt_s)


State 64

   12 set_of_args: IDENTIFIER COMA • set_of_args

    IDENTIFIER  shift, and go to state 41

    set_of_args  go to state 89


State 65

   29 function_call_explicit: IDENTIFIER OPENBRACE arguments CLBRACE • NEWLINE

    NEWLINE  shift, and go to state 90


State 66

    7 variable: IDENTIFIER •
   12 set_of_args: IDENTIFIER • COMA set_of_args
   13            | IDENTIFIER •

    COMA  shift, and go to state 64

    CLLIST    reduce using rule 13 (set_of_args)
    $default  reduce using rule 7 (variable)


State 67

   51 list_dec: IDENTIFIER ASSIGNOPR OPENLIST variable • ARTH_OP variable FOR IDENTIFIER IN function_call CLLIST NEWLINE

    ARTH_OP  shift, and go to state 91


State 68

   50 list_dec: IDENTIFIER ASSIGNOPR OPENLIST set_of_args • CLLIST NEWLINE

    CLLIST  shift, and go to state 92


State 69

   30 function_call: IDENTIFIER OPENBRACE • arguments CLBRACE

    IDENTIFIER  shift, and go to state 41

    $default  reduce using rule 10 (arguments)

    arguments    go to state 93
    set_of_args  go to state 43


State 70

   27 assignment: IDENTIFIER ASSIGNOPR variable NEWLINE •

    $default  reduce using rule 27 (assignment)


State 71

   28 assignment: IDENTIFIER ASSIGNOPR function_call NEWLINE •

    $default  reduce using rule 28 (assignment)


State 72

   31 iterations: WHILE OPENBRACE test CLBRACE • blockstart indent block_stmts dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 94


State 73

   36 test: variable REL_OP variable •

    $default  reduce using rule 36 (test)


State 74

   37 blockstart: BLOCKSTART NEWLINE •

    $default  reduce using rule 37 (blockstart)


State 75

   38 indent: INDENT •

    $default  reduce using rule 38 (indent)


State 76

   33 iterations: WHILE test blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 96
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 77

   32 iterations: FOR OPENBRACE IDENTIFIER IN • IDENTIFIER CLBRACE blockstart indent block_stmts dedent

    IDENTIFIER  shift, and go to state 97


State 78

   30 function_call: IDENTIFIER • OPENBRACE arguments CLBRACE
   34 iterations: FOR IDENTIFIER IN IDENTIFIER • blockstart indent block_stmts dedent

    OPENBRACE   shift, and go to state 69
    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 98


State 79

   35 iterations: FOR IDENTIFIER IN function_call • blockstart indent block_stmts dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 99


State 80

   43 if_stmt: IF OPENBRACE test CLBRACE • blockstart indent block_stmts dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 100


State 81

   44 if_stmt: IF test blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 101
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 82

   25 imports: IMPORT IDENTIFIER AS IDENTIFIER • NEWLINE

    NEWLINE  shift, and go to state 102


State 83

   26 imports: FROM IDENTIFIER IMPORT IDENTIFIER • AS IDENTIFIER NEWLINE

    AS  shift, and go to state 103


State 84

   17 class: CLASS IDENTIFIER blockstart indent • set_of_functions dedent

    DEF  shift, and go to state 8

    $default  reduce using rule 19 (set_of_functions)

    function_dec      go to state 104
    set_of_functions  go to state 105


State 85

    9 function_dec: DEF IDENTIFIER OPENBRACE arguments • CLBRACE blockstart indent statements return_stmt dedent

    CLBRACE  shift, and go to state 106


State 86

   46 elif_stmt: ELIF OPENBRACE test • CLBRACE blockstart indent block_stmts dedent

    CLBRACE  shift, and go to state 107


State 87

   47 elif_stmt: ELIF test blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 108


State 88

   49 else_stmt: ELSE blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 109


State 89

   12 set_of_args: IDENTIFIER COMA set_of_args •

    $default  reduce using rule 12 (set_of_args)


State 90

   29 function_call_explicit: IDENTIFIER OPENBRACE arguments CLBRACE NEWLINE •

    $default  reduce using rule 29 (function_call_explicit)


State 91

   51 list_dec: IDENTIFIER ASSIGNOPR OPENLIST variable ARTH_OP • variable FOR IDENTIFIER IN function_call CLLIST NEWLINE

    IDENTIFIER  shift, and go to state 24
    NUMBER      shift, and go to state 25

    variable  go to state 110


State 92

   50 list_dec: IDENTIFIER ASSIGNOPR OPENLIST set_of_args CLLIST • NEWLINE

    NEWLINE  shift, and go to state 111


State 93

   30 function_call: IDENTIFIER OPENBRACE arguments • CLBRACE

    CLBRACE  shift, and go to state 112


State 94

   31 iterations: WHILE OPENBRACE test CLBRACE blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 113


State 95

   40 block_stmts: statement • block_stmts
   41            | statement •

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    $default  reduce using rule 41 (block_stmts)

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 114
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 96

   33 iterations: WHILE test blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 116


State 97

   32 iterations: FOR OPENBRACE IDENTIFIER IN IDENTIFIER • CLBRACE blockstart indent block_stmts dedent

    CLBRACE  shift, and go to state 117


State 98

   34 iterations: FOR IDENTIFIER IN IDENTIFIER blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 118


State 99

   35 iterations: FOR IDENTIFIER IN function_call blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 119


State 100

   43 if_stmt: IF OPENBRACE test CLBRACE blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 120


State 101

   44 if_stmt: IF test blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 121


State 102

   25 imports: IMPORT IDENTIFIER AS IDENTIFIER NEWLINE •

    $default  reduce using rule 25 (imports)


State 103

   26 imports: FROM IDENTIFIER IMPORT IDENTIFIER AS • IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 122


State 104

   18 set_of_functions: function_dec • set_of_functions

    DEF  shift, and go to state 8

    $default  reduce using rule 19 (set_of_functions)

    function_dec      go to state 104
    set_of_functions  go to state 123


State 105

   17 class: CLASS IDENTIFIER blockstart indent set_of_functions • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 124


State 106

    9 function_dec: DEF IDENTIFIER OPENBRACE arguments CLBRACE • blockstart indent statements return_stmt dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 125


State 107

   46 elif_stmt: ELIF OPENBRACE test CLBRACE • blockstart indent block_stmts dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 126


State 108

   47 elif_stmt: ELIF test blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 127
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 109

   49 else_stmt: ELSE blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 128
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 110

   51 list_dec: IDENTIFIER ASSIGNOPR OPENLIST variable ARTH_OP variable • FOR IDENTIFIER IN function_call CLLIST NEWLINE

    FOR  shift, and go to state 129


State 111

   50 list_dec: IDENTIFIER ASSIGNOPR OPENLIST set_of_args CLLIST NEWLINE •

    $default  reduce using rule 50 (list_dec)


State 112

   30 function_call: IDENTIFIER OPENBRACE arguments CLBRACE •

    $default  reduce using rule 30 (function_call)


State 113

   31 iterations: WHILE OPENBRACE test CLBRACE blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 130
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 114

   40 block_stmts: statement block_stmts •

    $default  reduce using rule 40 (block_stmts)


State 115

   39 dedent: DEDENT •

    $default  reduce using rule 39 (dedent)


State 116

   33 iterations: WHILE test blockstart indent block_stmts dedent •

    $default  reduce using rule 33 (iterations)


State 117

   32 iterations: FOR OPENBRACE IDENTIFIER IN IDENTIFIER CLBRACE • blockstart indent block_stmts dedent

    BLOCKSTART  shift, and go to state 50

    blockstart  go to state 131


State 118

   34 iterations: FOR IDENTIFIER IN IDENTIFIER blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 132
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 119

   35 iterations: FOR IDENTIFIER IN function_call blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 133
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 120

   43 if_stmt: IF OPENBRACE test CLBRACE blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 134
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 121

   44 if_stmt: IF test blockstart indent block_stmts dedent •

    $default  reduce using rule 44 (if_stmt)


State 122

   26 imports: FROM IDENTIFIER IMPORT IDENTIFIER AS IDENTIFIER • NEWLINE

    NEWLINE  shift, and go to state 135


State 123

   18 set_of_functions: function_dec set_of_functions •

    $default  reduce using rule 18 (set_of_functions)


State 124

   17 class: CLASS IDENTIFIER blockstart indent set_of_functions dedent •

    $default  reduce using rule 17 (class)


State 125

    9 function_dec: DEF IDENTIFIER OPENBRACE arguments CLBRACE blockstart • indent statements return_stmt dedent

    INDENT  shift, and go to state 75

    indent  go to state 136


State 126

   46 elif_stmt: ELIF OPENBRACE test CLBRACE blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 137


State 127

   47 elif_stmt: ELIF test blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 138


State 128

   49 else_stmt: ELSE blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 139


State 129

   51 list_dec: IDENTIFIER ASSIGNOPR OPENLIST variable ARTH_OP variable FOR • IDENTIFIER IN function_call CLLIST NEWLINE

    IDENTIFIER  shift, and go to state 140


State 130

   31 iterations: WHILE OPENBRACE test CLBRACE blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 141


State 131

   32 iterations: FOR OPENBRACE IDENTIFIER IN IDENTIFIER CLBRACE blockstart • indent block_stmts dedent

    INDENT  shift, and go to state 75

    indent  go to state 142


State 132

   34 iterations: FOR IDENTIFIER IN IDENTIFIER blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 143


State 133

   35 iterations: FOR IDENTIFIER IN function_call blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 144


State 134

   43 if_stmt: IF OPENBRACE test CLBRACE blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 145


State 135

   26 imports: FROM IDENTIFIER IMPORT IDENTIFIER AS IDENTIFIER NEWLINE •

    $default  reduce using rule 26 (imports)


State 136

    9 function_dec: DEF IDENTIFIER OPENBRACE arguments CLBRACE blockstart indent • statements return_stmt dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4
    IMPORT      shift, and go to state 5
    FROM        shift, and go to state 6
    CLASS       shift, and go to state 7
    DEF         shift, and go to state 8

    $default  reduce using rule 3 (statements)

    statements              go to state 146
    declarations            go to state 10
    function_dec            go to state 11
    class                   go to state 12
    statement               go to state 13
    imports                 go to state 14
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 137

   46 elif_stmt: ELIF OPENBRACE test CLBRACE blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 147
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 138

   47 elif_stmt: ELIF test blockstart indent block_stmts dedent •

    $default  reduce using rule 47 (elif_stmt)


State 139

   49 else_stmt: ELSE blockstart indent block_stmts dedent •

    $default  reduce using rule 49 (else_stmt)


State 140

   51 list_dec: IDENTIFIER ASSIGNOPR OPENLIST variable ARTH_OP variable FOR IDENTIFIER • IN function_call CLLIST NEWLINE

    IN  shift, and go to state 148


State 141

   31 iterations: WHILE OPENBRACE test CLBRACE blockstart indent block_stmts dedent •

    $default  reduce using rule 31 (iterations)


State 142

   32 iterations: FOR OPENBRACE IDENTIFIER IN IDENTIFIER CLBRACE blockstart indent • block_stmts dedent

    IDENTIFIER  shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    IF          shift, and go to state 4

    statement               go to state 95
    assignment              go to state 15
    function_call_explicit  go to state 16
    iterations              go to state 17
    block_stmts             go to state 149
    if_stmt_s               go to state 18
    if_stmt                 go to state 19
    list_dec                go to state 20


State 143

   34 iterations: FOR IDENTIFIER IN IDENTIFIER blockstart indent block_stmts dedent •

    $default  reduce using rule 34 (iterations)


State 144

   35 iterations: FOR IDENTIFIER IN function_call blockstart indent block_stmts dedent •

    $default  reduce using rule 35 (iterations)


State 145

   43 if_stmt: IF OPENBRACE test CLBRACE blockstart indent block_stmts dedent •

    $default  reduce using rule 43 (if_stmt)


State 146

    9 function_dec: DEF IDENTIFIER OPENBRACE arguments CLBRACE blockstart indent statements • return_stmt dedent

    RETURN  shift, and go to state 150

    $default  reduce using rule 14 (return_stmt)

    return_stmt  go to state 151


State 147

   46 elif_stmt: ELIF OPENBRACE test CLBRACE blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 152


State 148

   51 list_dec: IDENTIFIER ASSIGNOPR OPENLIST variable ARTH_OP variable FOR IDENTIFIER IN • function_call CLLIST NEWLINE

    IDENTIFIER  shift, and go to state 153

    function_call  go to state 154


State 149

   32 iterations: FOR OPENBRACE IDENTIFIER IN IDENTIFIER CLBRACE blockstart indent block_stmts • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 155


State 150

   15 return_stmt: RETURN • function_call_explicit NEWLINE
   16            | RETURN • IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 156

    function_call_explicit  go to state 157


State 151

    9 function_dec: DEF IDENTIFIER OPENBRACE arguments CLBRACE blockstart indent statements return_stmt • dedent

    DEDENT  shift, and go to state 115

    dedent  go to state 158


State 152

   46 elif_stmt: ELIF OPENBRACE test CLBRACE blockstart indent block_stmts dedent •

    $default  reduce using rule 46 (elif_stmt)


State 153

   30 function_call: IDENTIFIER • OPENBRACE arguments CLBRACE

    OPENBRACE  shift, and go to state 69


State 154

   51 list_dec: IDENTIFIER ASSIGNOPR OPENLIST variable ARTH_OP variable FOR IDENTIFIER IN function_call • CLLIST NEWLINE

    CLLIST  shift, and go to state 159


State 155

   32 iterations: FOR OPENBRACE IDENTIFIER IN IDENTIFIER CLBRACE blockstart indent block_stmts dedent •

    $default  reduce using rule 32 (iterations)


State 156

   16 return_stmt: RETURN IDENTIFIER • NEWLINE
   29 function_call_explicit: IDENTIFIER • OPENBRACE arguments CLBRACE NEWLINE

    OPENBRACE  shift, and go to state 21
    NEWLINE    shift, and go to state 160


State 157

   15 return_stmt: RETURN function_call_explicit • NEWLINE

    NEWLINE  shift, and go to state 161


State 158

    9 function_dec: DEF IDENTIFIER OPENBRACE arguments CLBRACE blockstart indent statements return_stmt dedent •

    $default  reduce using rule 9 (function_dec)


State 159

   51 list_dec: IDENTIFIER ASSIGNOPR OPENLIST variable ARTH_OP variable FOR IDENTIFIER IN function_call CLLIST • NEWLINE

    NEWLINE  shift, and go to state 162


State 160

   16 return_stmt: RETURN IDENTIFIER NEWLINE •

    $default  reduce using rule 16 (return_stmt)


State 161

   15 return_stmt: RETURN function_call_explicit NEWLINE •

    $default  reduce using rule 15 (return_stmt)


State 162

   51 list_dec: IDENTIFIER ASSIGNOPR OPENLIST variable ARTH_OP variable FOR IDENTIFIER IN function_call CLLIST NEWLINE •

    $default  reduce using rule 51 (list_dec)
